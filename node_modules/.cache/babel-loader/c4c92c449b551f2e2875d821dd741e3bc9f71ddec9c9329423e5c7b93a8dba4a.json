{"ast":null,"code":"import{CreateUrl}from\"./create-url\";import axios from'axios';var strUrl=function strUrl(endpoint){return CreateUrl(endpoint);};var addTokenInHeader=function addTokenInHeader(token){var tokenHeaders={};if(token&&token!==null&&token.length>0){tokenHeaders.Authorization='token'+token;}return tokenHeaders;};var commonAxiosService=function commonAxiosService(dictInfo,resolve,reject){return axios(dictInfo).then(function(response){resolve(response.data);}).catch(function(error){reject(error);}).then(function(){//always executes\n});};var GetApiRequest=function GetApiRequest(endpoint,query,token){return new Promise(function(resolve,reject){var dictInfo={method:'GET',url:strUrl(endpoint),params:query,headers:{\"Content-Type\":\"application/json\"}};commonAxiosService(dictInfo,resolve,reject);});};var PostApiRequest=function PostApiRequest(endpoint,param,token){return new Promise(function(resolve,reject){// let tokenHeaders: any = addTokenInHeader(token);\nvar dictInfo={method:'POST',url:strUrl(endpoint),data:JSON.stringify(param),headers:{\"Content-Type\":\"application/json\"}};commonAxiosService(dictInfo,resolve,reject);});};var PutApiRequest=function PutApiRequest(endpoint,query,token){return new Promise(function(resolve,reject){var dictInfo={method:'PUT',url:strUrl(endpoint),params:query,headers:{\"Content-Type\":\"application/json\"}};commonAxiosService(dictInfo,resolve,reject);});};var DeleteApiRequest=function DeleteApiRequest(endpoint,query,token){return new Promise(function(resolve,reject){var dictInfo={method:'DELETE',url:strUrl(endpoint),params:query,headers:{\"Content-Type\":\"application/json\"}};commonAxiosService(dictInfo,resolve,reject);});};export var ServiceRequest={GetApiRequest:GetApiRequest,PostApiRequest:PostApiRequest,PutApiRequest:PutApiRequest,DeleteApiRequest:DeleteApiRequest};","map":{"version":3,"names":["CreateUrl","axios","strUrl","endpoint","addTokenInHeader","token","tokenHeaders","length","Authorization","commonAxiosService","dictInfo","resolve","reject","then","response","data","catch","error","GetApiRequest","query","Promise","method","url","params","headers","PostApiRequest","param","JSON","stringify","PutApiRequest","DeleteApiRequest","ServiceRequest"],"sources":["/workspaces/HRMS-frontend/src/app/helper/rest-api/index.tsx"],"sourcesContent":["import { CreateUrl } from \"./create-url\";\nimport axios from 'axios';\n\nconst strUrl = (endpoint:string) => {\n    return CreateUrl(endpoint);\n};\n\n\nconst addTokenInHeader = (token: string) => {\n    let tokenHeaders: any = {};\n    if(token && token !== null && token.length > 0){\n        tokenHeaders.Authorization = 'token' + token;\n    }\n    return tokenHeaders;\n}\n\n\nconst commonAxiosService = (dictInfo: any,resolve:any,reject:any) => {\n    return axios (dictInfo)\n    .then((response) => {\n        resolve(response.data);\n    })\n    .catch((error) => {\n        reject(error);\n    })\n    .then(() => {\n        //always executes\n    });\n}\n\nconst GetApiRequest = (endpoint: string,query: any,token:string) => {\n     return new Promise((resolve,reject) => {\n        let dictInfo = {\n            method: 'GET',\n            url: strUrl(endpoint),\n            params: query,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }\n        };\n        commonAxiosService(dictInfo,resolve,reject);\n     })\n};\n\nconst PostApiRequest = (endpoint: string,param: any,token:string) => {\n    return new Promise((resolve,reject) => {\n        // let tokenHeaders: any = addTokenInHeader(token);\n       let dictInfo = {\n           method: 'POST',\n           url: strUrl(endpoint),\n           data: JSON.stringify(param),\n           headers: { \n               \"Content-Type\": \"application/json\",\n           }\n       };\n       commonAxiosService(dictInfo,resolve,reject);\n    })\n};\n\nconst PutApiRequest = (endpoint: string,query: any,token:string) => {\n    return new Promise((resolve,reject) => {\n       let dictInfo = {\n           method: 'PUT',\n           url: strUrl(endpoint),\n           params: query,\n           headers: {\n               \"Content-Type\": \"application/json\",\n           }\n       };\n       commonAxiosService(dictInfo,resolve,reject);\n    })\n};\nconst DeleteApiRequest = (endpoint: string,query: any,token:string) => {\n    return new Promise((resolve,reject) => {\n       let dictInfo = {\n           method: 'DELETE',\n           url: strUrl(endpoint),\n           params: query,\n           headers: {\n               \"Content-Type\": \"application/json\",\n           }\n       };\n       commonAxiosService(dictInfo,resolve,reject);\n    })\n};\n\n\nexport const ServiceRequest = {\n    GetApiRequest,\n    PostApiRequest,\n    PutApiRequest,\n    DeleteApiRequest\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}