{"ast":null,"code":"import{useSelector}from\"react-redux\";import{Navigate,Route}from\"react-router\";import{RouteElementsList}from\"./route-elements\";import{RoutePath}from\"./route-path\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function RouteList(){var _useSelector=useSelector(function(state){return state.login;}),isLogin=_useSelector.isLogin;var CommonRoute=function CommonRoute(routeInfo){return/*#__PURE__*/_jsx(Route,{index:routeInfo.index,path:routeInfo.path,element:protectedRoutes(routeInfo)},routeInfo.path);};var protectedRoutes=function protectedRoutes(routeInfo){if(routeInfo.isAuth===false){if(isLogin){return/*#__PURE__*/_jsx(Navigate,{to:RoutePath.dashboard,replace:true});}return routeInfo.element;}else if(routeInfo.isAuth===true){if(isLogin){return routeInfo.element;}else{return/*#__PURE__*/_jsx(Navigate,{to:RoutePath.login,replace:true});}}};return RouteElementsList.map(function(item){return CommonRoute(item);});}","map":{"version":3,"names":["useSelector","Navigate","Route","RouteElementsList","RoutePath","RouteList","state","login","isLogin","CommonRoute","routeInfo","index","path","protectedRoutes","isAuth","dashboard","element","map","item"],"sources":["/workspaces/HRMS-frontend/src/app/routes/route-list.tsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router\";\nimport { RouteElementsList } from \"./route-elements\";\nimport { CommonRouteProps } from \"./route-interface.props\";\nimport { RoutePath } from \"./route-path\";\n\n\nexport default function RouteList() {\n  \n  const { isLogin } = useSelector((state: any) => state.login);\n  \n  const CommonRoute = (routeInfo: CommonRouteProps) => {\n      return <Route \n      index={routeInfo.index}\n      path={routeInfo.path}\n      element={protectedRoutes(routeInfo)}\n      key={routeInfo.path}\n      />\n    }\n\n    const protectedRoutes = (routeInfo: CommonRouteProps) => {\n      if(routeInfo.isAuth === false){\n        if(isLogin){\n          return <Navigate to={RoutePath.dashboard} replace />\n        }\n        return routeInfo.element;\n      }else if(routeInfo.isAuth === true){\n        if(isLogin){\n          return routeInfo.element;\n        }else{\n          return <Navigate to={RoutePath.login}  replace/>\n        }\n      }\n    }\n \n\nreturn RouteElementsList.map((item: CommonRouteProps) => {\n  return CommonRoute(item);\n})\n\n}"],"mappings":"AAAA,OAASA,WAAW,KAAQ,aAAa,CACzC,OAASC,QAAQ,CAAEC,KAAK,KAAQ,cAAc,CAC9C,OAASC,iBAAiB,KAAQ,kBAAkB,CAEpD,OAASC,SAAS,KAAQ,cAAc,CAAC,2CAGzC,cAAe,SAASC,UAAS,EAAG,CAElC,iBAAoBL,WAAW,CAAC,SAACM,KAAU,QAAKA,MAAK,CAACC,KAAK,GAAC,CAApDC,OAAO,cAAPA,OAAO,CAEf,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,SAA2B,CAAK,CACjD,mBAAO,KAAC,KAAK,EACb,KAAK,CAAEA,SAAS,CAACC,KAAM,CACvB,IAAI,CAAED,SAAS,CAACE,IAAK,CACrB,OAAO,CAAEC,eAAe,CAACH,SAAS,CAAE,EAC/BA,SAAS,CAACE,IAAI,CACjB,CACJ,CAAC,CAED,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAIH,SAA2B,CAAK,CACvD,GAAGA,SAAS,CAACI,MAAM,GAAK,KAAK,CAAC,CAC5B,GAAGN,OAAO,CAAC,CACT,mBAAO,KAAC,QAAQ,EAAC,EAAE,CAAEJ,SAAS,CAACW,SAAU,CAAC,OAAO,OAAG,CACtD,CACA,MAAOL,UAAS,CAACM,OAAO,CAC1B,CAAC,IAAK,IAAGN,SAAS,CAACI,MAAM,GAAK,IAAI,CAAC,CACjC,GAAGN,OAAO,CAAC,CACT,MAAOE,UAAS,CAACM,OAAO,CAC1B,CAAC,IAAI,CACH,mBAAO,KAAC,QAAQ,EAAC,EAAE,CAAEZ,SAAS,CAACG,KAAM,CAAE,OAAO,OAAE,CAClD,CACF,CACF,CAAC,CAGL,MAAOJ,kBAAiB,CAACc,GAAG,CAAC,SAACC,IAAsB,CAAK,CACvD,MAAOT,YAAW,CAACS,IAAI,CAAC,CAC1B,CAAC,CAAC,CAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}